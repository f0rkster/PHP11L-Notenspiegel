-- Generated and Designed by Kristof Friess
-- Copyright Kristof Friess 
-- 
-- MySQL Script generated by MySQL Workbench
-- Fri Nov 16 11:54:25 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema notenspiegel
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema notenspiegel
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `notenspiegel` DEFAULT CHARACTER SET utf8 ;
USE `notenspiegel` ;

-- -----------------------------------------------------
-- Table `notenspiegel`.`student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `notenspiegel`.`student` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `email` VARCHAR(320) NOT NULL,
  `firstname` VARCHAR(50) NOT NULL,
  `lastname` VARCHAR(50) NOT NULL,
  `secondname` VARCHAR(50) NULL,
  `gender` ENUM('u', 'm', 'f') NOT NULL DEFAULT 'u' COMMENT 'uni\nmale\nfemale\n',
  `street` VARCHAR(255) NULL,
  `streetNumber` VARCHAR(10) NULL,
  `city` VARCHAR(60) NULL COMMENT 'because of\nLlanfair­pwllgwyn­gyllgo­gerychwyrn­drobwll­llanty­silio­gogogoch\n',
  `zipCode` VARCHAR(12) NULL,
  `phone` VARCHAR(26) NULL,
  `matriculationNumber` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `notenspiegel`.`login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `notenspiegel`.`login` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `validated` TINYINT(1) NOT NULL DEFAULT 0,
  `enabled` TINYINT(1) NOT NULL DEFAULT 0,
  `username` VARCHAR(25) NULL,
  `lastActive` TIMESTAMP NULL,
  `lastLogin` TIMESTAMP NULL,
  `failedLoginCount` TINYINT NOT NULL DEFAULT 0,
  `passwordHash` VARCHAR(255) NOT NULL,
  `passwordResetHash` VARCHAR(60) NULL,
  `passwordResetCreatedAt` TIMESTAMP NULL,
  `student` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_login_student_idx` (`student` ASC),
  CONSTRAINT `fk_login_student`
    FOREIGN KEY (`student`)
    REFERENCES `notenspiegel`.`student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `notenspiegel`.`module`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `notenspiegel`.`module` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `number` VARCHAR(10) NOT NULL COMMENT 'Reference Number of the Module\n',
  `name` VARCHAR(100) NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'module is active can used',
  `createdBy` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_module_login1_idx` (`createdBy` ASC),
  CONSTRAINT `fk_module_login1`
    FOREIGN KEY (`createdBy`)
    REFERENCES `notenspiegel`.`login` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `notenspiegel`.`exam`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `notenspiegel`.`exam` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `examdate` DATETIME NOT NULL,
  `semester` ENUM('ws', 'ss') NULL COMMENT 'ws = winter semester\nss = summer semester',
  `module` INT NOT NULL,
  `room` VARCHAR(10) NULL,
  `building` VARCHAR(30) NULL,
  `createdBy` INT NOT NULL,
  `type` ENUM('exam', 'project', 'viva', 'other') NOT NULL,
  `typeOtherName` VARCHAR(50) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_exam_module1_idx` (`module` ASC),
  INDEX `fk_exam_login1_idx` (`createdBy` ASC),
  CONSTRAINT `fk_exam_module1`
    FOREIGN KEY (`module`)
    REFERENCES `notenspiegel`.`module` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_exam_login1`
    FOREIGN KEY (`createdBy`)
    REFERENCES `notenspiegel`.`login` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `notenspiegel`.`examresult`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `notenspiegel`.`examresult` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updatedAt` TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
  `result` DECIMAL(3,1) NOT NULL DEFAULT 0.0,
  `percentage` DECIMAL(5,2) NULL COMMENT 'Possible Value, will used to generate result if needed.\n',
  `exam` INT NOT NULL,
  `createdBy` INT NOT NULL,
  `student` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_examresult_exam1_idx` (`exam` ASC),
  INDEX `fk_examresult_login1_idx` (`createdBy` ASC),
  INDEX `fk_examresult_login2_idx` (`student` ASC),
  CONSTRAINT `fk_examresult_exam1`
    FOREIGN KEY (`exam`)
    REFERENCES `notenspiegel`.`exam` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_examresult_login1`
    FOREIGN KEY (`createdBy`)
    REFERENCES `notenspiegel`.`login` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_examresult_login2`
    FOREIGN KEY (`student`)
    REFERENCES `notenspiegel`.`login` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
